#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>

int main() {
    pid_t pid = fork(); // Create a new process

    if (pid < 0) {
        // Fork failed
        perror("Fork failed");
        exit(1);
    }
    else if (pid == 0) {
        // Child process
        printf("Child Process: PID = %d, Parent PID = %d\n", getpid(), getppid());
        // Simulate some work in the child process
        sleep(10); // Child sleeps for 10 seconds
        printf("Child Process: PID = %d has finished execution.\n", getpid());
    }
    else {
        // Parent process
        printf("Parent Process: PID = %d, Child PID = %d\n", getpid(), pid);
        // Parent will sleep for a shorter duration
        sleep(2); // Parent sleeps for 2 seconds
        printf("Parent Process: PID = %d is terminating.\n", getpid());
        // Parent process terminates
    }

    return 0;
}


/*
Output

Parent Process: PID = 1234, Child PID = 1235
Child Process: PID = 1235, Parent PID = 1234
Parent Process: PID = 1234 is terminating.
Child Process: PID = 1235 has finished execution.

*/